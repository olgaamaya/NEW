// Function to preload the first image or video of each lightbox
function preloadFirstImages() {
    // Select all lightboxes by the id pattern 'Lightbox_'
    const lightboxes = document.querySelectorAll('[id^="Lightbox_"]');

    lightboxes.forEach(lightbox => {
        const lightboxId = lightbox.id.replace("Lightbox_", ""); // Extract the lightbox id

        // Fetch the first media file from the lightbox's folder
        fetch(`https://new-vhym.onrender.com/api/get-cloudinary-media?folder=lightbox_${lightboxId}&limit=1`)
            .then(response => response.json())
            .then(mediaFiles => {
                if (mediaFiles.length > 0) {
                    const firstMedia = mediaFiles[0]; // Get the first media in the array
                    let div = document.createElement("div");
                    div.classList.add("slide", `slide${lightboxId}`); // Add the necessary classes to the div

                    let preloadElement;

                    // If the media is a video
                    if (firstMedia.type === "video") {
                        preloadElement = document.createElement("video");
                        preloadElement.className = "videoslide"; // Same class as your other videos
                        preloadElement.src = firstMedia.src;
                        preloadElement.controls = true;
                        preloadElement.preload = "auto"; // Preload the first video
                        div.appendChild(preloadElement);
                    }
                    // If the media is an image
                    else {
                        preloadElement = new Image();
                        preloadElement.src = firstMedia.src;
                        preloadElement.className = "image-slide"; // Same class as your other images
                        preloadElement.loading = "eager"; // Load the image eagerly
                        preloadElement.alt = firstMedia.alt || `Lightbox Image 1`; // Optional alt text
                        div.appendChild(preloadElement);
                    }

                    // Append the div to the body, but keep it hidden (it will preload the media)
                    div.style.display = "none";
                    document.body.appendChild(div);
                }
            })
            .catch(err => console.error(`Error preloading first image for Lightbox ${lightboxId}:`, err));
    });
}

// Call the preload function once the DOM is loaded
document.addEventListener("DOMContentLoaded", preloadFirstImages);

//START SCRIPT 
// let slideIndex = 1; // Initialize globally
let mediaLoaded = {}; // Object to track if media has been loaded for each lightbox

// Function to scale menu on window resize
function scale(x) {
    const menuToggle = document.getElementById('menu-toggle');
    const anyLightboxOpen = document.querySelector("[id^='Lightbox_'][style*='display: flex']");

    if (x.matches && !anyLightboxOpen) {
        menuToggle.style.display = 'flex';
    } else {
        menuToggle.style.display = 'none';
    }
}

var x = window.matchMedia("(max-width: 1000px)");
scale(x);
x.addListener(scale);

let lastScrollPosition = 0;

// Function to preload the first image of each lightbox
function preloadFirstImages() {
    const lightboxes = document.querySelectorAll('[id^="Lightbox_"]');

    lightboxes.forEach(lightbox => {
        const lightboxId = lightbox.id.replace("Lightbox_", "");
        fetch(`https://new-vhym.onrender.com/api/get-cloudinary-media?folder=lightbox_${lightboxId}&limit=1`)
            .then(response => response.json())
            .then(mediaFiles => {
                if (mediaFiles.length > 0) {
                    const firstMedia = mediaFiles[0];
                    let preloadElement;

                    if (firstMedia.type === "video") {
                        preloadElement = document.createElement("video");
                        preloadElement.src = firstMedia.src;
                        preloadElement.preload = "auto";
                    } else {
                        preloadElement = new Image();
                        preloadElement.src = firstMedia.src;
                    }

                    preloadElement.style.display = "none";
                    document.body.appendChild(preloadElement);
                }
            })
            .catch(err => console.error(`Error preloading first image for Lightbox ${lightboxId}:`, err));
    });
}

document.addEventListener("DOMContentLoaded", preloadFirstImages);

function loadMedia(lightboxId) {
    const lightbox = document.getElementById(`Lightbox_${lightboxId}`);
    const mediaContainer = lightbox.querySelector(".modal-content");

    if (!mediaContainer) return;

    if (mediaLoaded[lightboxId]) {
        console.log(`Media for Lightbox ${lightboxId} already loaded. Skipping fetch.`);
        return;
    }

    const folderName = `lightbox_${lightboxId}`;
    console.log(`Fetching media for folder: ${folderName}`);
    const isMobile = window.matchMedia("(max-width: 1000px)").matches;

    fetch(`https://new-vhym.onrender.com/api/get-cloudinary-media?folder=${folderName}`)
        .then(response => response.json())
        .then(mediaFiles => {
            console.log("Fetched media files:", mediaFiles);
            displayMediaFiles(mediaFiles, lightboxId, isMobile);
            mediaLoaded[lightboxId] = true;
        })
        .catch(err => console.error("Error loading media:", err));
}

function displayMediaFiles(mediaFiles, lightboxId, isMobile) {
    const mediaContainer = document.getElementById(`Lightbox_${lightboxId}`).querySelector(".modal-content");

    mediaFiles.forEach((media, index) => {
        let div = document.createElement("div");
        div.classList.add("slide", `slide${lightboxId}`);

        if (media.type === "video") {
            let video = document.createElement("video");
            video.className = "videoslide";
            video.src = media.src;
            video.controls = true;
            video.preload = index < 3 ? "auto" : "none";
            div.appendChild(video);
        } else {
            let img = document.createElement("img");
            let imageUrl = media.src.includes('f_auto') ? media.src : media.src.replace('/upload/', '/upload/f_auto,');
            img.src = imageUrl;
            img.className = "image-slide";
            img.loading = index < 3 ? "eager" : "lazy";
            img.alt = media.alt || `Lightbox Image ${index + 1}`;
            div.appendChild(img);
        }

        mediaContainer.appendChild(div);
    });

    showSlide(lightboxId, 1);
}

function openLightbox(lightboxId) {
    lastScrollPosition = window.scrollY || window.pageYOffset;
    loadMedia(lightboxId);

    document.querySelectorAll("[id^='Lightbox_']").forEach(lightbox => {
        if (lightbox.id !== `Lightbox_${lightboxId}`) {
            lightbox.style.display = "none";
        }
    });

    document.getElementById(`Lightbox_${lightboxId}`).style.display = "flex";
    document.getElementById(`projecttitle_${lightboxId}`).style.display = "block";
    document.getElementById("mouseTarget").style.display = "none";
    document.body.style.overflow = "hidden";
    document.getElementById("rowid").style.display = "none";
    document.getElementById("menu-toggle").style.display = "none";
    document.querySelector("footer").style.display = "none";
    document.getElementById("social_elements2").style.display = "none";

    setKeys(lightboxId);
    scale(x);

    let lastSlide = localStorage.getItem(`lastSlide_${lightboxId}`);
    if (lastSlide) {
        toSlide(lightboxId, parseInt(lastSlide));
    } else {
        toSlide(lightboxId, 1);
    }
}

function storeLastSlide(lightboxId, slideIndex) {
    localStorage.setItem(`lastSlide_${lightboxId}`, slideIndex);
}

function toSlide(lightboxId, slideIndex) {
    showSlide(lightboxId, slideIndex);
    storeLastSlide(lightboxId, slideIndex);
}

function changeSlide(NR, n) {
    slideIndex += n;
    let slides = document.getElementsByClassName(`slide${NR}`);

    if (slideIndex < 1) {
        slideIndex = slides.length;
    } else if (slideIndex > slides.length) {
        slideIndex = 1;
    }

    showSlide(NR, slideIndex);
    document.dispatchEvent(new Event("slideChange"));
}

function showSlide(slideGroup, e) {
    let slides = document.getElementsByClassName(`slide${slideGroup}`);
    if (e > slides.length) slideIndex = 1;
    else if (e < 1) slideIndex = slides.length;
    else slideIndex = e;

    for (let n = 0; n < slides.length; n++) {
        slides[n].style.display = "none";
        slides[n].classList.remove("active-slide", "previous-slide", "next-slide");
    }

    if (slides.length === 1) {
        slides[0].style.display = "flex";
        slides[0].classList.add("active-slide");
    } else {
        if (slides[slideIndex - 1]) {
            slides[slideIndex - 1].style.display = "flex";
            slides[slideIndex - 1].classList.add("active-slide");
        }

        let prevIndex = slideIndex - 2 >= 0 ? slideIndex - 2 : slides.length - 1;
        if (slides[prevIndex]) {
            slides[prevIndex].style.display = "flex";
            slides[prevIndex].classList.add("previous-slide");
        }

        let nextIndex = slideIndex < slides.length ? slideIndex : 0;
        if (slides[nextIndex]) {
            slides[nextIndex].style.display = "flex";
            slides[nextIndex].classList.add("next-slide");
        }
    }

    storeLastSlide(slideGroup, slideIndex);
}

document.addEventListener("DOMContentLoaded", function() {
    function preloadVisibleSlides() {
        document.querySelectorAll(".active-slide img.image-slide, .next-slide img.image-slide, .previous-slide img.image-slide")
            .forEach(img => img.loading = "eager");
    }

    preloadVisibleSlides();
    document.addEventListener("slideChange", preloadVisibleSlides);
});

function closeLightbox(lightboxId) {
    document.getElementById(`Lightbox_${lightboxId}`).style.display = "none";
    document.body.style.overflow = "";
    window.scrollTo({ top: lastScrollPosition, behavior: "smooth" });
    window.onkeydown = null;
    scale(x);
}

// Function to set up pointer interaction
function setupPointer() {
    const Xmax = getHighestLightboxNumber();
    const pointerElement = document.getElementById("before-pointer");

    pointerElement.onclick = function() {
        openLightbox(Xmax);
        showSlide(Xmax, 1);
    };
}

window.onload = setupPointer;

function closeLightbox(lightboxId) {
    document.getElementById(`Lightbox_${lightboxId}`).style.display = "none";
    pauseVideo(lightboxId);

    document.getElementById(`projecttitle_${lightboxId}`).style.display = "none";
    document.getElementById("mouseTarget").style.display = "flex";
    document.body.style.overflow = "";
    document.getElementById("rowid").style.display = "grid";
    document.querySelector("footer").style.display = "flex";
    document.getElementById("social_elements2").style.display = "";

    window.scrollTo({ top: lastScrollPosition, behavior: "smooth" });
    window.onkeydown = null;
    scale(x);
}

function pauseVideo(lightboxId) {
    document.querySelectorAll(`#Lightbox_${lightboxId} video`).forEach(video => {
        video.pause();
        video.currentTime = 0;
    });
}

function setKeys(lightboxId) {
    window.onkeydown = function(e) {
        const key = e.key || e.code;

        if (key === "Escape") {
            closeLightbox(lightboxId);
        } else if (key === "ArrowRight") {
            changeSlide(lightboxId, 1);
        } else if (key === "ArrowLeft") {
            changeSlide(lightboxId, -1);
        }
    };
}
//scriptend